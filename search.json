[{"path":"https://ninanor.github.io/seatrack_metadata_handling/articles/introduction.html","id":"setup","dir":"Articles","previous_headings":"","what":"Setup","title":"Example script","text":"Loading library: things need set functions can used. important can monitor changes made reasoning behind . package uses logger package logging. print messages console write file. default logging level set INFO. can also set scripts verbose changing log threshold: information different logger levels see log_levels. also need point package seatrack directory placed file system. variable used many functions contained package.","code":"library(seatrackfunctions) start_logging() log_threshold (TRACE) path_to_seatrack <- file.path(\"a_filepath\",\"SEATRACK - shared\") set_sea_track_folder(path_to_seatrack) #> INFO [2025-09-24 10:52:51] Sea track folder set to: a_filepath/SEATRACK - shared"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/articles/introduction.html","id":"loading-data","dir":"Articles","previous_headings":"","what":"Loading data","title":"Example script","text":"set can open partner metadata file. Note files shown vignette missing number columns present real files. loads Excel file R list, element list different sheet Excel file. can load master file wish update. can done using colony name. function returns list two elements, data path. path full file path loaded. data list, element sheet imported master file Optionally, can also load initialise sheets nonresponsive loggers. function takes vector file paths vector manufacturers.","code":"partner_data <- load_partner_metadata(\"Metadata_SEATRACK_2025-TestColony.xlsx\") names(partner_data) #> [1] \"ENCOUNTER DATA\" \"LOGGER RETURNS\" \"RESTART TIMES\" head(partner_data$`LOGGER RETURNS`) #> # A tibble: 1 × 6 #>   logger_id status     `download / stop_date` `downloaded by` comment         #>   <chr>     <chr>      <date>                 <chr>           <chr>           #> 1 L1        Downloaded 2025-01-10             User            Logger returned #> # ℹ 1 more variable: `stored or sent to?` <chr> master_import <- load_master_import(\"TestColony\") #> SUCCESS [2025-09-24 10:52:51] Master import file for colony 'TestColony' found at: a_filepath/SEATRACK - shared/Database/Imports_Metadata/imports_TestColony_2025.xlsx names(master_import$data) #> [1] \"METADATA\"         \"STARTUP_SHUTDOWN\" head(master_import$data$METADATA) #> # A tibble: 1 × 6 #>   date       ring_number logger_id_deployed logger_id_retrieved colony   comment #>   <date>     <chr>       <chr>              <lgl>               <chr>    <chr>   #> 1 2024-01-10 42          L1                 NA                  TestCol… A smal… nonresponsive_list <- load_nonresponsive(c(\"lotek_sheet.xlsx\", \"migrate_sheet.xlsx\"), c(\"Lotek\", \"MigrateTech\"))"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/articles/introduction.html","id":"workflow","dir":"Articles","previous_headings":"","what":"Workflow","title":"Example script","text":"several steps updating master import sheet. Firstly checking startup files missing logger sessions. appending reported encounter data. Finally processing reported logger returns attempts update appropriate session master startup sheet, setting download status dates. function also handles loggers partner restearts, generating new sessions master startup sheet. function also update nonresponsive lists. every stage, log report changes functions made master sheet. log also report unable handle part partner supplied metadata. can help identify areas need manually fixing either partner metadata sheet master sheet.","code":"master_import_data <- master_import$data updated_startup <- add_loggers_from_startup(master_import_data$`STARTUP_SHUTDOWN`) updated_metadata <- append_encounter_data(master_import_data$METADATA, partner_data$`ENCOUNTER DATA`) #> SUCCESS [2025-09-24 10:52:51] Appended 1 rows to master metadata. New total is 2 rows. updated_sessions <- handle_returned_loggers(\"TestColony\", updated_startup, partner_data$`LOGGER RETURNS`, partner_data$`RESTART TIMES`, nonresponsive_list) #> SUCCESS [2025-09-24 10:52:51] Found unfinished session for logger ID: L1 2025-01-10 #> SUCCESS [2025-09-24 10:52:51] Unfinished session: #>   logger_serial_no starttime_gmt intended_species intended_location #> 1 L1               2024-01-01    bird             TestColony        #> SUCCESS [2025-09-24 10:52:51] Updated 1 sessions. #> SUCCESS [2025-09-24 10:52:51] Updated sessions: #>   logger_serial_no starttime_gmt download_type download_date #> 1 L1               2024-01-01    Downloaded    2025-01-10"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/articles/introduction.html","id":"combined-workflow","dir":"Articles","previous_headings":"","what":"Combined workflow","title":"Example script","text":"workflow can run using single function, handle_partner_metadata takes colony name imported excel files arguments. Finally, happy changes made, can save updated master sheet. new/modified nonresponsive sheets.","code":"new_sheets <- handle_partner_metadata(\"TestColony\", partner_data, master_import_data) #> INFO [2025-09-24 10:52:51] Add missing sessions from start up files #> INFO [2025-09-24 10:52:51] Append encounter data #> SUCCESS [2025-09-24 10:52:51] Appended 1 rows to master metadata. New total is 2 rows. #> INFO [2025-09-24 10:52:51] Update sessions from logger returns #> SUCCESS [2025-09-24 10:52:51] Found unfinished session for logger ID: L1 2025-01-10 #> SUCCESS [2025-09-24 10:52:51] Unfinished session: #>   logger_serial_no starttime_gmt intended_species intended_location #> 1 L1               2024-01-01    bird             TestColony        #> SUCCESS [2025-09-24 10:52:51] Updated 1 sessions. #> SUCCESS [2025-09-24 10:52:51] Updated sessions: #>   logger_serial_no starttime_gmt download_type download_date #> 1 L1               2024-01-01    Downloaded    2025-01-10 new_master_sheets <- new_sheets$master_sheet new_nonresponsive_list <- new_sheets$nonresponsive_list save_master_sheet(new_master_sheets, master_import$path) save_nonresponsive(paths, new_nonresponsive_list)"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Julian Evans. Author, maintainer.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Evans J (2025). seatrackfunctions: Utility Functions Seatrack. R package version 0.0.0.9000, https://github.com/jevansbio/seatrack_functions.","code":"@Manual{,   title = {seatrackfunctions: Utility Functions for Seatrack},   author = {Julian Evans},   year = {2025},   note = {R package version 0.0.0.9000},   url = {https://github.com/jevansbio/seatrack_functions}, }"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/add_loggers_from_startup.html","id":null,"dir":"Reference","previous_headings":"","what":"Attempt to add logger from startup sheets — add_loggers_from_startup","title":"Attempt to add logger from startup sheets — add_loggers_from_startup","text":"function attempts add logger master startup data frame startup sheets. data quality older startup sheets variable, function checks column mismatches skips files. Incorrectly formatted datetime columns can also lead issues.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/add_loggers_from_startup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attempt to add logger from startup sheets — add_loggers_from_startup","text":"","code":"add_loggers_from_startup(master_startup)"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/add_loggers_from_startup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attempt to add logger from startup sheets — add_loggers_from_startup","text":"master_startup data frame containing master startup shutdown information.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/add_loggers_from_startup.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attempt to add logger from startup sheets — add_loggers_from_startup","text":"new version master startup data frame, logger added succesful.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/add_loggers_from_startup.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Attempt to add logger from startup sheets — add_loggers_from_startup","text":"","code":"if (FALSE) { # \\dontrun{ updated_master_startup <- add_loggers_from_startup_sheets(master_startup) } # }"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/append_encounter_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Append encounter data to the master import metadata — append_encounter_data","title":"Append encounter data to the master import metadata — append_encounter_data","text":"Append encounter data master import metadata","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/append_encounter_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append encounter data to the master import metadata — append_encounter_data","text":"","code":"append_encounter_data(master_metadata, encounter_data)"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/append_encounter_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append encounter data to the master import metadata — append_encounter_data","text":"master_metadata data frame representing master import metadata. encounter_data data frame representing encounter data appended.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/append_encounter_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append encounter data to the master import metadata — append_encounter_data","text":"data frame encounter data appended master metadata.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/append_encounter_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Append encounter data to the master import metadata — append_encounter_data","text":"","code":"if (FALSE) { # \\dontrun{ updated_master_metadata <- append_encounter_data(master_metadata, encounter_data) } # }"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_all_locations.html","id":null,"dir":"Reference","previous_headings":"","what":"Get All Locations — get_all_locations","title":"Get All Locations — get_all_locations","text":"Retrieves list locations (colonies) organized country Sea Track folder.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_all_locations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get All Locations — get_all_locations","text":"","code":"get_all_locations()"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_all_locations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get All Locations — get_all_locations","text":"named list element vector colony names country.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_all_locations.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get All Locations — get_all_locations","text":"function expects global variable .sea_track_folder set, looks \"Locations\" subfolder within . country represented subdirectory within \"Locations\", colony subdirectory within respective country folder. .sea_track_folder set, function stop error message.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_all_locations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get All Locations — get_all_locations","text":"","code":"set_sea_track_folder(\"/path/to/sea_track\") #> Error in set_sea_track_folder(\"/path/to/sea_track\"): The specified directory does not exist. colonies <- get_all_locations() #> Error in get_all_locations(): object '.sea_track_folder' not found print(colonies) #> Error: object 'colonies' not found"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_master_import_path.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the path of the master import file — get_master_import_path","title":"Get the path of the master import file — get_master_import_path","text":"function constructs path master import file given colony.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_master_import_path.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the path of the master import file — get_master_import_path","text":"","code":"get_master_import_path(colony)"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_master_import_path.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the path of the master import file — get_master_import_path","text":"colony character string specifying name colony.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_master_import_path.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the path of the master import file — get_master_import_path","text":"character string representing path master import file.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_master_import_path.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the path of the master import file — get_master_import_path","text":"","code":"if (FALSE) { # \\dontrun{  get_master_import_folder(\"ColonyA\") } # }"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_startup_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Get paths to all startup Excel files — get_startup_paths","title":"Get paths to all startup Excel files — get_startup_paths","text":"function retrieves paths Excel files \"Starttime files stored loggers\" subdirectory sea track folder.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_startup_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get paths to all startup Excel files — get_startup_paths","text":"","code":"get_startup_paths()"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_startup_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get paths to all startup Excel files — get_startup_paths","text":"character vector containing paths Excel files specified subdirectory.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_startup_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get paths to all startup Excel files — get_startup_paths","text":"","code":"if (FALSE) { # \\dontrun{ all_xlsx_files <- get_startup_paths() } # }"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_unfinished_session.html","id":null,"dir":"Reference","previous_headings":"","what":"Find a logger's unfinished session in the master startup data frame This function finds the unfinished session for a given logger in the master startup data frame. — get_unfinished_session","title":"Find a logger's unfinished session in the master startup data frame This function finds the unfinished session for a given logger in the master startup data frame. — get_unfinished_session","text":"Find logger's unfinished session master startup data frame function finds unfinished session given logger master startup data frame.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_unfinished_session.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find a logger's unfinished session in the master startup data frame This function finds the unfinished session for a given logger in the master startup data frame. — get_unfinished_session","text":"","code":"get_unfinished_session(master_startup, logger_id, logger_download_stop_date)"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_unfinished_session.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find a logger's unfinished session in the master startup data frame This function finds the unfinished session for a given logger in the master startup data frame. — get_unfinished_session","text":"master_startup data frame containing master startup shutdown information. logger_id character string specifying logger ID. logger_download_stop_date Date object specifying reported download/stop date logger.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_unfinished_session.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find a logger's unfinished session in the master startup data frame This function finds the unfinished session for a given logger in the master startup data frame. — get_unfinished_session","text":"list containing index unfinished session session data frame, NULL unfinished session found.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/get_unfinished_session.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find a logger's unfinished session in the master startup data frame This function finds the unfinished session for a given logger in the master startup data frame. — get_unfinished_session","text":"","code":"if (FALSE) { # \\dontrun{ unfinished_session <- get_unfinished_session(master_startup, \"Logger123\", as.Date(\"2023-01-15\")) } # }"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/handle_partner_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Add partner provided metadata to the master import file — handle_partner_metadata","title":"Add partner provided metadata to the master import file — handle_partner_metadata","text":"function adds metadata provided partners master import file appropriate colony. firstly adds missing sessions checking start files. appends reported encounter data, avoiding duplicate rows. Finally updates sessions based reported logger returns. includes generating new sessions loggers restarted field.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/handle_partner_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add partner provided metadata to the master import file — handle_partner_metadata","text":"","code":"handle_partner_metadata(   colony,   new_metadata,   master_import,   nonresponsive_list = list() )"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/handle_partner_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add partner provided metadata to the master import file — handle_partner_metadata","text":"colony character string specifying name colony. new_metadata List tibbles, corresponding sheet partner provided information file. master_import List tibbles, corresponding sheet master import file.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/handle_partner_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add partner provided metadata to the master import file — handle_partner_metadata","text":"updated version master import file, list element sheet excel file.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/handle_returned_loggers.html","id":null,"dir":"Reference","previous_headings":"","what":"Handle restarted loggers — handle_returned_loggers","title":"Handle restarted loggers — handle_returned_loggers","text":"function processes logger return information updates master import data frame accordingly.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/handle_returned_loggers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Handle restarted loggers — handle_returned_loggers","text":"","code":"handle_returned_loggers(   colony,   master_startup,   logger_returns,   restart_times,   nonresponsive_list = list() )"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/handle_returned_loggers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Handle restarted loggers — handle_returned_loggers","text":"colony character string specifying name colony. master_startup data frame containing master startup shutdown information. logger_returns data frame containing logger return information. restart_times data frame containing logger restart information. nonresponsive_list list containing tibbles unresponsive loggers different manufacturers. name list element match producer name master_startup (e.g., \"Lotek\", \"MigrateTech\").","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/handle_returned_loggers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Handle restarted loggers — handle_returned_loggers","text":"list consisting two elements: `master_startup“: updated dataframe containing modified master import data frame. nonresponsive_list: updated list containing modified nonresponsive logger data frames.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/handle_returned_loggers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Handle restarted loggers — handle_returned_loggers","text":"","code":"if (FALSE) { # \\dontrun{ updated_master_startup <- handle_returned_loggers(master_startup, logger_returns, restart_times) } # }"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_master_import.html","id":null,"dir":"Reference","previous_headings":"","what":"Load master import file for a given colony — load_master_import","title":"Load master import file for a given colony — load_master_import","text":"function loads master import file specified colony. iterates appropriate sheets combines data list data frames.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_master_import.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load master import file for a given colony — load_master_import","text":"","code":"load_master_import(colony)"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_master_import.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load master import file for a given colony — load_master_import","text":"colony character string specifying name colony.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_master_import.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load master import file for a given colony — load_master_import","text":"list consisting two items. data: list tibbles, corresponding sheet master import file. path: file path loaded master import file.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_master_import.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load master import file for a given colony — load_master_import","text":"","code":"if (FALSE) { # \\dontrun{ load_master_import(\"ColonyA\") } # }"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_nonresponsive.html","id":null,"dir":"Reference","previous_headings":"","what":"Load multiple nonresponsive logger sheets — load_nonresponsive","title":"Load multiple nonresponsive logger sheets — load_nonresponsive","text":"function loads nonresponsive logger sheets multiple file paths manufacturers.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_nonresponsive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load multiple nonresponsive logger sheets — load_nonresponsive","text":"","code":"load_nonresponsive(file_paths, manufacturers)"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_nonresponsive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load multiple nonresponsive logger sheets — load_nonresponsive","text":"file_paths character vector file paths load. manufacturers character vector manufacturers, length file_paths.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_nonresponsive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load multiple nonresponsive logger sheets — load_nonresponsive","text":"named list tibbles, containing nonresponsive logger data corresponding manufacturer.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_nonresponsive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load multiple nonresponsive logger sheets — load_nonresponsive","text":"","code":"if (FALSE) { # \\dontrun{ file_paths <- c(\"lotek.xlsx\", \"migratetech.xlsx\") manufacturers <- c(\"Lotek\", \"MigrateTech\") nonresponsive_list <- load_nonresponsive(file_paths, manufacturers) } # }"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_nonresponsive_sheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Load nonresponsive logger sheet for current year This function loads the record of unresponsive loggers. If the filepath provided does not exist, it initialises new sheets. — load_nonresponsive_sheet","title":"Load nonresponsive logger sheet for current year This function loads the record of unresponsive loggers. If the filepath provided does not exist, it initialises new sheets. — load_nonresponsive_sheet","text":"Load nonresponsive logger sheet current year function loads record unresponsive loggers. filepath provided exist, initialises new sheets.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_nonresponsive_sheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load nonresponsive logger sheet for current year This function loads the record of unresponsive loggers. If the filepath provided does not exist, it initialises new sheets. — load_nonresponsive_sheet","text":"","code":"load_nonresponsive_sheet(file_path, manufacturer = c(\"Lotek\", \"MigrateTech\"))"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_nonresponsive_sheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load nonresponsive logger sheet for current year This function loads the record of unresponsive loggers. If the filepath provided does not exist, it initialises new sheets. — load_nonresponsive_sheet","text":"file_path String indicating file loaded . manufacturer String indicating name manufacturer. Either \"Lotek\" \"MigrateTech\".","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_nonresponsive_sheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load nonresponsive logger sheet for current year This function loads the record of unresponsive loggers. If the filepath provided does not exist, it initialises new sheets. — load_nonresponsive_sheet","text":"tibble containing unresponsive logger data.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_partner_metadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Load partner provided metadata from an Excel file — load_partner_metadata","title":"Load partner provided metadata from an Excel file — load_partner_metadata","text":"function reads metadata provided partners Excel file. iterates appropriate sheets combines data list data frames.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_partner_metadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load partner provided metadata from an Excel file — load_partner_metadata","text":"","code":"load_partner_metadata(file_path)"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_partner_metadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load partner provided metadata from an Excel file — load_partner_metadata","text":"file_path character string specifying path Excel file.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_partner_metadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load partner provided metadata from an Excel file — load_partner_metadata","text":"list data frames, corresponding sheet Excel file.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_partner_metadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load partner provided metadata from an Excel file — load_partner_metadata","text":"","code":"if (FALSE) { # \\dontrun{ load_partner_metadata(\"path/to/partner_metadata.xlsx\") } # }"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_sheets_as_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Load specified sheets from an Excel file into a list of data frames — load_sheets_as_list","title":"Load specified sheets from an Excel file into a list of data frames — load_sheets_as_list","text":"function reads specified sheets Excel file returns list data frames. provides options skip rows, force date columns Date type, drop unnamed columns.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_sheets_as_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load specified sheets from an Excel file into a list of data frames — load_sheets_as_list","text":"","code":"load_sheets_as_list(   file_path,   sheets,   skip = 0,   force_date = TRUE,   drop_unnamed = TRUE,   col_types = rep(NULL, length(sheets)) )"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_sheets_as_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load specified sheets from an Excel file into a list of data frames — load_sheets_as_list","text":"file_path character string specifying path Excel file. sheets character vector specifying names sheets read. skip integer specifying number rows skip beginning sheet. Default 0. force_date logical indicating whether attempt convert date columns Date type. Default TRUE. drop_unnamed logical indicating whether drop unnamed columns (columns header). Default TRUE. col_types list length sheets, containing either NULL character vector read_excel classes.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_sheets_as_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load specified sheets from an Excel file into a list of data frames — load_sheets_as_list","text":"list data frames, corresponding sheet Excel file.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/load_sheets_as_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load specified sheets from an Excel file into a list of data frames — load_sheets_as_list","text":"","code":"if (FALSE) { # \\dontrun{ sheets_data <- load_sheets_as_list(\"path/to/file.xlsx\", c(\"Sheet1\", \"Sheet2\"), skip = 1) } # }"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/save_master_sheet.html","id":null,"dir":"Reference","previous_headings":"","what":"Save a master sheet to an Excel file. — save_master_sheet","title":"Save a master sheet to an Excel file. — save_master_sheet","text":"function writes provided data frame (new_master_sheets) Excel file specified filename.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/save_master_sheet.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save a master sheet to an Excel file. — save_master_sheet","text":"","code":"save_master_sheet(new_master_sheets, filepath)"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/save_master_sheet.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save a master sheet to an Excel file. — save_master_sheet","text":"new_master_sheets data frame containing master sheet data saved. filepath string specifying path name Excel file created.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/save_master_sheet.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save a master sheet to an Excel file. — save_master_sheet","text":"return value.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/save_master_sheet.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save a master sheet to an Excel file. — save_master_sheet","text":"","code":"if (FALSE) { # \\dontrun{ save_master_sheet(new_master_sheets, \"output.xlsx\") } # }"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/save_nonresponsive.html","id":null,"dir":"Reference","previous_headings":"","what":"Save multiple nonresponsive logger sheets to Excel files — save_nonresponsive","title":"Save multiple nonresponsive logger sheets to Excel files — save_nonresponsive","text":"function iterates list nonresponsive logger sheets vector file paths, saving sheet corresponding file path.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/save_nonresponsive.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Save multiple nonresponsive logger sheets to Excel files — save_nonresponsive","text":"","code":"save_nonresponsive(file_paths, nonresponsive_list)"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/save_nonresponsive.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Save multiple nonresponsive logger sheets to Excel files — save_nonresponsive","text":"file_paths character vector file paths save sheet. nonresponsive_list named list tibbles, containing nonresponsive logger data.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/save_nonresponsive.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Save multiple nonresponsive logger sheets to Excel files — save_nonresponsive","text":"return value.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/save_nonresponsive.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Save multiple nonresponsive logger sheets to Excel files — save_nonresponsive","text":"","code":"save_multiple_nonresponsive(nonresponsive_list, file_paths) #> Error in save_multiple_nonresponsive(nonresponsive_list, file_paths): could not find function \"save_multiple_nonresponsive\""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/seatrackfunctions-package.html","id":null,"dir":"Reference","previous_headings":"","what":"seatrackfunctions: Utility Functions for Seatrack — seatrackfunctions-package","title":"seatrackfunctions: Utility Functions for Seatrack — seatrackfunctions-package","text":"utility functions assist handling data part seatrack project","code":""},{"path":[]},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/seatrackfunctions-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"seatrackfunctions: Utility Functions for Seatrack — seatrackfunctions-package","text":"Maintainer: Julian Evans julian.evans@nina.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/set_comments.html","id":null,"dir":"Reference","previous_headings":"","what":"Set or append comments in the master_startup data frame — set_comments","title":"Set or append comments in the master_startup data frame — set_comments","text":"function updates 'comment' field specified row master_startup data frame. non-empty logger comment provided, set comment existing comment present. existing comment present, logger comment appended , separated \" | \".","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/set_comments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set or append comments in the master_startup data frame — set_comments","text":"","code":"set_comments(master_startup, index, logger_comments)"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/set_comments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set or append comments in the master_startup data frame — set_comments","text":"master_startup data frame containing 'comment' column updated. index Integer index specifying row master_startup update. logger_comments character string containing comment add append.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/set_comments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set or append comments in the master_startup data frame — set_comments","text":"updated master_startup data frame modified comment.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/set_comments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set or append comments in the master_startup data frame — set_comments","text":"","code":"master_startup <- data.frame(comment = c(\"\", \"Existing comment\")) set_comments(master_startup, 1, \"New logger comment\") #>              comment #> 1 New logger comment #> 2   Existing comment set_comments(master_startup, 2, \"Another logger comment\") #>                                     comment #> 1                                           #> 2 Existing comment | Another logger comment"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/set_master_startup_value.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a value in a specific cell of master startup — set_master_startup_value","title":"Set a value in a specific cell of master startup — set_master_startup_value","text":"function updates value specified cell master_startup data frame.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/set_master_startup_value.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a value in a specific cell of master startup — set_master_startup_value","text":"","code":"set_master_startup_value(master_startup, index, column, value)"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/set_master_startup_value.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a value in a specific cell of master startup — set_master_startup_value","text":"master_startup Master starup tibble. index Integer. row index cell update. column Character integer. column name index cell update. value new value assign specified cell.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/set_master_startup_value.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set a value in a specific cell of master startup — set_master_startup_value","text":"updated master_startup data frame.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/set_master_startup_value.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set a value in a specific cell of master startup — set_master_startup_value","text":"","code":"set_master_startup_value(master_startup, 2, \"download_type\", \"Succesfully downloaded\") #> Error: object 'master_startup' not found"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/set_sea_track_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the base directory for the sea track folder — set_sea_track_folder","title":"Set the base directory for the sea track folder — set_sea_track_folder","text":"function sets global variable used functions.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/set_sea_track_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the base directory for the sea track folder — set_sea_track_folder","text":"","code":"set_sea_track_folder(dir)"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/set_sea_track_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the base directory for the sea track folder — set_sea_track_folder","text":"dir character string specifying path base directory.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/set_sea_track_folder.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set the base directory for the sea track folder — set_sea_track_folder","text":"None","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/set_sea_track_folder.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set the base directory for the sea track folder — set_sea_track_folder","text":"","code":"if (FALSE) { # \\dontrun{  set_sea_track_folder(\"/path/to/sea/track/folder\") } # }"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/start_logging.html","id":null,"dir":"Reference","previous_headings":"","what":"Start logging to a file — start_logging","title":"Start logging to a file — start_logging","text":"function initializes logging specified directory.","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/start_logging.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start logging to a file — start_logging","text":"","code":"start_logging(   log_dir = NULL,   log_file = paste0(\"seatrack_functions_log_\", Sys.Date(), \".txt\") )"},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/start_logging.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start logging to a file — start_logging","text":"log_dir character string specifying directory log file saved. NULL, log file saved current working directory. log_file character string specifying name log file. Default \"seatrack_functions_log.txt\".","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/start_logging.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start logging to a file — start_logging","text":"None","code":""},{"path":"https://ninanor.github.io/seatrack_metadata_handling/reference/start_logging.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start logging to a file — start_logging","text":"","code":"if (FALSE) { # \\dontrun{ start_logging(\"/path/to/log/directory\") } # }"}]
